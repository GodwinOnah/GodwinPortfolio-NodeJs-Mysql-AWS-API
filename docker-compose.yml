services:

  mysqldb:
    container_name: mysqlcontainer
    # platform: linux/amd64
    image: mysql:latest
    restart: unless-stopped
    volumes: 
      - ./dbinit/init.sql:/docker-entrypoint-initdb.d/0_init.sql
      - db_data_mysql:/var/lib/mysql #If you don't define this, logging into a workbench will prompt errors
    ports: 
       - 3307:3306 # mapping from local port to container port
    expose:
      - 3307
    env_file:
       - mysqlenvvariable.env
    networks:
      - internalnet

  jenkins:
    image: jenkins/jenkins
    container_name: jenkins-container
#    user: root
#    privileged: true
    restart: always
    ports:
      - "8085:8080"
      - "50000:50000"
    volumes:
      - db_data_jenkins:/var/jenkins_home
    networks:
      - internalnet

  phpmyadmin:
    container_name: phpmyadmincontainer
    platform: linux/amd64
    image: phpmyadmin
    restart: always
    depends_on:
      - mysqldb
    ports:
      - 8081:8080
    environment:
       PMA_HOST: mysqldb
    networks:
      - internalnet

  nodeapp:
    container_name: nodeappcontainer
    build: .
    # platform: linux/amd64
    image: nodeapp:v1
    restart: always
    ports: 
      - 3000:3000 # mapping from local port to container port
    expose:
      - 3000
    depends_on:
      - mysqldb
    env_file:
      - nodeapp.env     
    networks:
      - internalnet

networks:
  internalnet:
    driver: bridge
       
volumes:
  db_data_mysql:
  db_data_jenkins: