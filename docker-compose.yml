services:

  mysqldb:
    container_name: mysqlcontainer
    image: mysql
    restart: unless-stopped
    volumes: 
      - ./dbinit/init.sql:/docker-entrypoint-initdb.d/0_init.sql
      - db_data_Onah:/var/lib/mysql #If you don't define this, logging into a workbench will prompt errors
    ports: 
       - 3307:3306 # mapping from local port to container port
    expose:
      - 3307
    environment: 
      MYSQL_USER: Godwin
      MYSQL_PASSWORD: pass
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: portfoliodb
      SERVICE_TAGS: prod
      SERVICE_NAME: mysqldbservice
    networks:
      - internalnet

  phpmyadmin:
    container_name: phpmyadmincontainer
    image: phpmyadmin
    restart: always
    depends_on:
      - mysqldb
    ports:
      - 8081:80
    environment:
       PMA_HOST: mysqldb
    networks:
      - internalnet

  # postgredb:
  #  container_name: postgresqlcontainer
  #  image: postgres
  #  environment:
  #      POSTGRES_USER: Godwin
  #      POSTGRES_PASSWORD: secret
  #  ports:
  #    - 5432:5432      
  #  volumes:
  #     - ./dbinit/init.sql:/docker-entrypoint-initdb.d/0_init.sql
  #  networks:
  #     - internalnet


  nodeapp:
    container_name: nodeappcontainer
    build: .
    image: nodeapp:v1
    restart: always
    ports: 
      - 3000:3000 # mapping from local port to container port
    expose:
      - 3000
    depends_on:
      - af50be35e4e3e4c8aa7355703f542d72-8894186.eu-north-1.elb.amazonaws.com
    environment:
      DB_HOST: af50be35e4e3e4c8aa7355703f542d72-8894186.eu-north-1.elb.amazonaws.com
      DB_USER: Godwin 
      DB_ROOT_PASSWORD: pass
      DB_NAME: portfoliodb
      DB_PORT: 80
      DB_CONNECTION_LIMIT: 10
      SERVER_PORT: 3000 # container port
      SERVICE_TAGS: prod
      SERVICE_NAME: Nodeappservice      
    networks:
      - internalnet

networks:
  internalnet:
    driver: bridge
       
volumes:
  db_data_Onah: